{"version":3,"sources":["reportWebVitals.js","component/counter.jsx","component/BoxButton.jsx","component/row.jsx","component/Board.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","checklist","num","looked_color","check","i","length","push","console","log","getNumber","check_algo","checker","index","err","counter","props","timerID","setInterval","changeCount","state","number","this","setState","class","Component","BoxButton","box","changeColor","colorList","colorNum","color","style","background","onClick","row","Board","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6db4781c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\n\r\nvar items = [];\r\nvar checklist = [];\r\nvar num = 1;\r\nvar looked_color=0;\r\nvar row_l = 6;\r\n\r\nclass counter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.timerID = setInterval(\r\n            () => this.changeCount(),\r\n            200\r\n          );\r\n        this.state = {\r\n            number: 1\r\n        }\r\n    }\r\n    changeCount() {\r\n        console.log(items.length);\r\n        console.log(checklist.length);\r\n        this.setState({number: getNum()});\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <div class=\"jumbotron\">\r\n                    <h1>{this.state.number}</h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport function addToList(box){\r\n    items.push(box);\r\n}\r\nexport function check() {\r\n    checker(num);\r\n}\r\nfunction getNum(){\r\n    return num;\r\n}\r\nfunction check_algo(index) {\r\n    try {\r\n        if(checklist[index]){\r\n            return;\r\n            \r\n        }else if(looked_color === items[index].getNumber()){\r\n            checklist[index] = true;\r\n            check_algo(index + row_l);\r\n            check_algo(index - row_l);\r\n            if( (index + 1) % 6 !== 0){check_algo(index + 1);}\r\n            if( index % 6 !== 0){check_algo(index - 1);}\r\n        }else{\r\n            return;\r\n        }\r\n    }\r\n    catch(err) {\r\n        return;\r\n    }    \r\n}\r\n\r\nfunction checker() {\r\n    checklist = [];\r\n    num = 0;\r\n    for(let i = 0 ; i < items.length; i++){\r\n        checklist.push(false);\r\n    }\r\n    console.log(checklist);\r\n    for(let i = 0 ; i < items.length; i++){\r\n        if(checklist[i] === false){\r\n            num += 1;\r\n            looked_color = items[i].getNumber();\r\n            console.log(\"alku\");\r\n            console.log(checklist.length);\r\n            console.log(items.length);\r\n            console.log(num);\r\n            console.log(looked_color);\r\n            check_algo(i)\r\n        }\r\n    }\r\n    console.log(\"loppu\");\r\n    console.log(checklist);\r\n    console.log(num);\r\n    console.log(looked_color);\r\n\r\n}\r\n\r\nexport default counter;","import React, { Component } from \"react\";\r\nimport { addToList, check } from \"./counter.jsx\";\r\n\r\n\r\nclass BoxButton extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.colorNum = 0;\r\n        this.state = {\r\n            color: \"white\"\r\n        }\r\n        addToList(this);\r\n    }\r\n\r\n    getNumber(){\r\n        return this.colorNum;\r\n    }\r\n    changeColor = () => {\r\n        const colorList = ['white','blue','red','green',\"yellow\"];\r\n        if(this.colorNum === colorList.length - 1){\r\n            this.colorNum = 0;\r\n        }else{\r\n            this.colorNum += 1;\r\n        }\r\n        this.setState({\r\n            color: colorList[this.colorNum]\r\n        });\r\n        check()\r\n    }\r\n    render() {\r\n        return( <button class=\"BButton\" style={{background: this.state.color}}\r\n        onClick={this.changeColor}></button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BoxButton;","import React, { Component } from \"react\";\r\nimport BoxButton from \"./BoxButton\";\r\n\r\nclass row extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"row justify-content-center\">\r\n                <BoxButton/>\r\n                <BoxButton/>\r\n                <BoxButton/>\r\n                <BoxButton/>\r\n                <BoxButton/>\r\n                <BoxButton/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default row;","import React, { Component } from \"react\";\r\nimport Row from \"./row\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Board extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div class=\"row justify-content-center\">\r\n                <Counter/>\r\n            </div>\r\n            <div>\r\n                <Row/>\r\n                <Row/>\r\n                <Row/>\r\n                <Row/>\r\n                <Row/>\r\n                <Row/>\r\n                <Row/>\r\n                <Row/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Board;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport Board from './component/Board';\n\nReactDOM.render(\n    <Board />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}